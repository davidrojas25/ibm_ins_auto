---
- name: parser meta data
  parser_metadata:
    version: 1.0
    command: show interface
    network_os: ios

- name: match sections
  pattern_match:
    regex: "([A-Z]\\w+\\d\\/[^ ]+)\\s-\\sGroup"
    match_all: true
    match_greedy: true
  register: section

- name: match hsrp interfaces
  pattern_group:
    - name: match interface name
      pattern_match:
        regex: "([A-Z]\\w+\\d\\/[^ ]+)\\s-\\sGroup"
        content: "{{ item }}"
      register: hsrp_interface

    - name: match group
      pattern_match:
        regex: "-\\s([A-Z]\\w+\\s\\d+)"
        content: "{{ item }}"
      register: hsrp_group

    - name: match state
      pattern_match:
        regex: "State\\sis\\s([A-Z]\\w+)"
        content: "{{ item }}"
      register: hsrp_state

    - name: match virtual IP
      pattern_match:
        regex: "Virtual\\sIP\\saddress\\sis\\s(\\d+\\.\\d+\\.\\d+\\.\\d+)"
        content: "{{ item }}"
      register: hsrp_virtual_ip  

    - name: match active router
      pattern_match:
        regex: "Active router\\sis\\s([\\w+,.]+)"
        content: "{{ item }}"
      register: hsrp_active_router  
    
  loop: "{{ section }}"
  register: interfaces

- name: generate json data structure
  json_template:
    template:
      - key: "{{ item.hsrp_interface.matches.0 }}"
        object:
          - key: config
            object:
              - key: name
                value: "{{ item.hsrp_interface.matches.0 }}"
              - key: group
                value: "{{ item.hsrp_group.matches.0 }}"
              - key: status
                value: "{{ item.hsrp_status.matches.0 }}"
              - key: virtual_ip
                value: "{{ item.hsrp_virtual_ip.matches.0 }}"
              - key: active_router
                value: "{{ item.hsrp_active_router.matches.0 }}"

  loop: "{{ interfaces }}"
  export: true
  #export_as: "{{ export_type }}"
  register: hsrp_facts